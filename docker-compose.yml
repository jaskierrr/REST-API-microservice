services:
  postgres:
    container_name: postgres
    image: postgres:16
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      PGDATA: "/var/lib/postgresql/data/pgdata"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "db_prod"]
      interval: 10s
      timeout: 3s
      retries: 3
    volumes:
      - ./data/postgers-data:/var/lib/postgresql/pgdata
    ports:
      - "${DB_PORT}:${DB_PORT}"
    restart: always

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:8.11
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - "5050:80"
    restart: always

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.10.7-management
    hostname: rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 30s
      timeout: 30s
      retries: 10
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit disk_free_limit 2147483648
    volumes:
      - ./data/rabbitmq-data:/var/lib/rabbitmq
    ports:
      - 15672:15672

  card-project-api:
    container_name: card-project
    image: card-project
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 15
        window: 20s

    build:
      context: .
      dockerfile: ./Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    ports:
      - "8080:8080"
    volumes:
      - .:/app

  migrate:
    container_name: migrater
    image: migrate/migrate
    depends_on:
      - postgres
    volumes:
      - C:\my\go\card-project\migrations:/database
    command: [ "-path", "/database", "-database", "postgres://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}?sslmode=disable", "up" ]

volumes:
  postgers-data:
  pgadmin-data:
